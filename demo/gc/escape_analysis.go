package main

import "fmt"

type Demo struct {
	name string
}

func createDemo(name string) *Demo {
	d := new(Demo) // 局部变量 d 逃逸到堆
	d.name = name
	return d
}

func main() {
	demo := createDemo("demo")
	fmt.Println(demo)
}

/**
go build -gcflags=-m escape_analysis.go
# command-line-arguments
.\escape_analysis.go:9:6: can inline createDemo
.\escape_analysis.go:17:20: inlining call to createDemo
.\escape_analysis.go:18:13: inlining call to fmt.Println
.\escape_analysis.go:9:17: leaking param: name
.\escape_analysis.go:10:10: new(Demo) escapes to heap
.\escape_analysis.go:17:20: new(Demo) escapes to heap
.\escape_analysis.go:18:13: []interface {}{...} does not escape
<autogenerated>:1: leaking param content: .this
<autogenerated>:1: .this does not escape
*/
